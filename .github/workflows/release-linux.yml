name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  build-x64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for x64
        run: dotnet publish -c Release -r linux-x64 -p:DebugType=none --self-contained true

      - name: Make Release Folder
        run: mkdir ./release/

      - name: Copy Binary (x64)
        run: |
          set -e
          cp ./bin/Release/net9.0/linux-x64/publish/BatteryStatus ./BatteryStatus
      
      - name: Zip Release (x64)
        run: |
          set -e
          zip -r "./release/BatteryStatus-${GITHUB_REF##*/}-linux-x64.zip" ./BatteryStatus ./batterystatus.service ./Icons
          run: echo "X64_RELEASE=./release/BatteryStatus-${GITHUB_REF##*/}-linux-x64.zip" >> $GITHUB_ENV

      - name: Upload x64 Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-x64
          path: ${{ env.X64_RELEASE }}

  build-arm64:
    runs-on: ubuntu-24.04-arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build for arm64
        run: dotnet publish -c Release -r linux-arm64 -p:DebugType=none --self-contained true

      - name: Make Release Folder
        run: mkdir ./release/

      - name: Copy Binary (arm64)
        run: |
          set -e
          cp ./bin/Release/net9.0/linux-x64/publish/BatteryStatus ./BatteryStatus
      
      - name: Zip Release (arm64)
        run: |
          set -e
          zip -r "./release/BatteryStatus-${GITHUB_REF##*/}-linux-arm64.zip" ./BatteryStatus ./batterystatus.service ./Icons
          run: echo "ARM64_RELEASE=./release/BatteryStatus-${GITHUB_REF##*/}-linux-arm64.zip" >> $GITHUB_ENV
      
      - name: Upload arm64 Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-arm64
          path: ${{ env.ARM64_RELEASE }}  # Adjust this to your arm64 build output path

  release:
    runs-on: ubuntu-latest
    needs: [build-x64, build-arm64]  # Ensure this job runs after both builds
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up tag name
        id: get_tag_name
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Download x64 Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-x64
          path: ./releases

      - name: Download arm64 Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-arm64
          path: ./releases 

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          files: ./releases/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
